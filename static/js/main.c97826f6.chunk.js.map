{"version":3,"sources":["Components/NavBar/NavBar.js","constants/constants.js","axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","url.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","react_default","a","createElement","className","src","alt","API_KEY","imageUrl","instance","axios","create","baseURL","Banner","_useState","useState","_useState2","Object","slicedToArray","movie","setMovie","useEffect","get","concat","then","response","console","log","data","results","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","_useState3","_useState4","urlId","setUrlId","url","map","obj","onClick","id","length","isSmall","YouTube","opts","height","width","playerVars","autoplay","videoId","key","comedyMovies","originals","actionMovies","horrorMovies","App","Components_NavBar_NavBar","Components_Banner_Banner","Components_RowPost_RowPost","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c97826f6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './NavBar.css'\n\nfunction NavBar() {\n  return (\n    <div className='navbar'>\n        <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix logo\" />\n        <img className=\"avatar\" src=\"'https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Avatar\" />\n    </div>\n  )\n}\n\nexport default NavBar","export const baseUrl = 'https://api.themoviedb.org/3';\nexport const API_KEY = \"4e07040695771018790341c2eac5c6eb\";\nexport const imageUrl = \"https://image.tmdb.org/t/p/original\";\n","import axios from 'axios'\nimport {baseUrl} from './constants/constants'\n\nconst instance = axios.create({\n    baseURL: baseUrl,\n  \n  });\n\n  export default instance","import React, { useEffect, useState } from 'react'\nimport {API_KEY , baseUrl, imageUrl} from '../../constants/constants'\nimport axios from '../../axios'\nimport './Banner.css'\n\nfunction Banner() {\n  const [movie,setMovie] = useState([])\n  useEffect(()=>{\n    axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((response)=>{\n      console.log(response.data)\n      setMovie(response.data.results[1])\n    })\n  },[])\n  return (\n    <div style={{\n      backgroundImage: movie ? `url(${imageUrl + movie.backdrop_path})` : ''\n    } }className='banner'>\n        <div className='content'>\n            <h1 className='title'>{movie ? movie.title : ''}</h1>\n            <div className='banner_buttons'>\n                <button className='button' >Play</button>\n                <button className='button' >My list</button>\n\n\n            </div>\n            <h1 className='description'>{movie ? movie.overview : ''}</h1>\n        </div>\n        <div className=\"fade_bottom\">\n          \n        </div>\n\n    </div>\n  )\n}\n\nexport default Banner","import React from 'react'\nimport { useEffect, useState } from 'react'\nimport YouTube from 'react-youtube'\nimport './RowPost.css'\nimport axios from '../../axios'\nimport {API_KEY , imageUrl} from '../../constants/constants'\n\n\nfunction RowPost(props) {\n  const [movies, setMovies] = useState([])\n  const [urlId, setUrlId] = useState('')\n  useEffect(() => {\n    axios.get(props.url).then((response)=>{\n      console.log(response.data);\n      setMovies(response.data.results)\n    })\n  \n  }, [])\n\n  const opts={\n    height : '390',\n    width  : '100%',\n    playerVars :{\n      autoplay :0,\n    } ,\n  };\n\n const handleMovie = (id)=>{\n  console.log(id);\n   axios.get(`/movie/${id}/videos?api_key${API_KEY}&language=en=us`).then(response=>{\n    if(response.data.results.length!==0){\n      setUrlId(response.data.results[0])\n    }else{\n      console.log('Array empty');\n    }\n    })\n  }\n   \n\n return (\n   <div className='row'>\n   <h2>{props.title}</h2>\n   <div className='posters'>\n   {movies.map((obj)=>\n            \n    <img onClick={()=>handleMovie(obj.id)} className={props.isSmall?'smallPosters' : 'poster'} alt='posters' src={`${imageUrl + obj.backdrop_path}`}></img>\n   )}\n             \n    </div>\n    \n    { urlId &&      <YouTube opts={opts} videoId={urlId.key} />    }\n        \n    </div>\n  \n )\n   \n}                \n\nexport default RowPost","import {API_KEY} from './constants/constants'\n\nexport const comedyMovies = `discover/movie?api_key=${API_KEY}&with_genres=35`;\nexport const originals = `discover/tv?api_key=${API_KEY}&with_networks=213`;\nexport const actionMovies = `discover/movie?api_key=${API_KEY}&with_genres=28`;\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`;\nexport const horrorMovies = `discover/movie?api_key=${API_KEY}&with_genres=27`","import React from 'react'\nimport NavBar from './Components/NavBar/NavBar';\nimport './App.css'\nimport Banner from './Components/Banner/Banner';\nimport RowPost from './Components/RowPost/RowPost';\nimport {comedyMovies , actionMovies , originals, horrorMovies} from './url'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <RowPost title='Netflix Originals' url={originals} />\n      <RowPost title='Action Movies' url={actionMovies} isSmall={true} />\n      <RowPost title='Comedy Movies' url={comedyMovies} isSmall={true} />\n      <RowPost title='Horror Movies' url={horrorMovies} isSmall={true} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}